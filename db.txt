This file documents the "database" used to store and index posted
videos. The information is stored in the file system, based in the
$datadir directory (settings.php). The outline below has a "/" at the
end of the line of a directory, and an "=" in the middle of a line of a
file, with the general form of the data in that file after the "=".

The database operations are coded in lib/database.php, using my File
System DataBase, lib/fsdb.php.

Contents that are PHP arrays are converted to text by serialize() and
converted back to arrays by unserialize().

The "scrambler" file contains a 16-bit random number, encoded as a hex
string, which is used to scramble hashes and as the key for the
encrypted registration link sent to a new poster.

The "freelist" file contains a comma-separated list of deleted post
numbers. I'm hoping this won't get very long. If it does, I may need
to add some directory structure to avoid reading a very long file in
order to delete or add a post. Alternatively, I could not reuse
deleted post numbers, that will lead to sparse pages, and unstable
URLs to see the page containing a particular post.

The "info" directory stores the information about individual posts,
indexed by post number. Its sub-directories are numbered by the string
length of the post number divided by 2. Each leaf-level file
contains up to 100 entries, a PHP array, serialized for storge. This
enables storage of 100**9 + 100**8 + ... + 100 = 10**20
posts. Probably sufficient.

The "modinfo" directory is formed just like "info", but it stores
posts that are awaiting moderation.

The "email" directory maps the sha1 hash of the users's email address,
represented as a hex string, to his post number, using two levels of
directory hierarchy to pull off the first four digits. This enables 16
million posts with 256 entries in each of three directory levels. This
uses a file per email address, which costs lots of block-rounding
space in a non-compressing file system. It really needs some sort of
btree structure, but I'm too lazy to write that now. When I notice
storage crossing a gigabyte, and have to pay NFS $10/month for that,
it will become worthwhile. But bandwidth requirements will likely move
me off of NFS before we get there, maybe to a VM that allows me to
install reiserfs, eliminating the block-rounding wastage.

$datadir/
  scrambler=<A random string for scrambling hashes and encryption key>
  count=<The number of posts in info>
  freelist=<Comma-separated list of deleted post numbers>
  info/
    0/
      f00=array(00=>array('video'=>$video, 'email'=>$emailhash,
                          'password'=>$passwordhash,
                          'name'=>$name, 'url'=>$url),
                01=>array('video'=>$video, ...),
                ...
                99=>array('video'=>$video, ...))
    1/
      01/
        f00=array(...)
        f01=array(...)
        ...
        f99=array(...)
      02/
      ...
      99/
    2/
      01/
        00/
          f00=array(...)
          f01=array(...)
          ...
          f99=array(...)
        01/
        ...
        99/
      02/
      ...
      99/
    ...
    9/
   modinfo/
     [same as info/]
   email/
     00/
       00/
         <emailhash>=<postnumber>
         ...
       01/
         <emailhash>=<postnumber>
         ...
       ...
       ff/
         <emailhash>=<postnumber>
         ...
     02/
       ...
     ...
     ff/
       ...
